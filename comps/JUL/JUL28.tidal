setcps (90/60/4)




-- BINARY PATTERN
let inverse 1 = 0
    inverse 0 = 1

do 
    let pat = "[1 1*3 0/2 1*4 0 0 1/2 0]"
    d1 $ gain pat # s "drum:10"
    d2 $ gain (inverse <$> pat) # s "cp"
    d3 $ gain (inverse <$> pat) # s "bd"

    hush

-- Quintuplet swing:
d1 $ stack [
    s "[hh ~ ~ hh ~][hh ~ ~ hh ~][hh ~ ~ hh ~ ][hh ~ ~ hh ~]",
    s "[bd ~ ~ ~ ~][cp ~ ~ ~ ~][bd ~ ~ ~ ~][cp ~ ~ bd ~]"
]

-- Septuplet swing: (+ kick stutters)
d1 $ stack [
    s "[hh ~ ~ ~ hh ~ ~][hh ~ ~ ~ hh ~ ~][hh ~ ~ ~ hh ~ ~][hh ~ ~ ~ hh ~ ~]",
    every 8 (0.5 <~) $ sometimesBy 0.5 (# crush 4) $ s "[bass2 ~ ~ ~ ~ ~ ~][cp ~ ~ ~ ~ ~ bass2][bass2 ~ ~ ~ bass2 ~ ~][cp ~ ~ ~ bass2 ~ bass2]",
    note (scale "minor" "5 2 1") # s (swingBy (1/3) 4 "arp(3,8)") |> speed "1 4 5" ,
    chunk 3 (hurry 2) $ fast 2 $ s "casio*4" 
        |+| speed "1.5 0.7"
        # cutoff (range 300 1000 $ slow 2 $ saw) # resonance "0.7"
]



d1 silence