let inverse 1 = 0
    inverse 0 = 1

do 
    let pat = "[1 0 1*2 1 0 1 1 0]"
    d1 $
        stack [
            sometimes (# speed (range 0 1 $ sine)) $
            (1 <~) $
            sometimes (# pan (range 0 2 $ tri)) $
            n (arp "converge" "e'm9'8") # s "insect*16"
                # nudge (range 0 2 $ slow 4 saw)
                # orbit "1",
            slowspread slow [1, 2, 8, 4] $
            (spread (striate' 16) [(1/32), (1/16)] $
            s "{[404 404/2] 404}%4")
                # room "0.8" # size (range 0.6 1.5 $ tri)
                # cut "1"
                # n "{2 3}"
                # resonance (range 0.5 1.25 $ tri)
        ]
    d2 $ jux ((5/8) ~>) $
        stack [
            every 2 (|+| speed "{1.25 0.75 1.5 0.25}%8") $
            every 8 (2 <~) $
            every 4 (density 2) $
            gain (inverse <$> pat) # "gabba",
            fast 4 $ 
            jux ((5/8) ~>) $
            s "industrial*3"
                # lpf (range 120 2000 $ saw)
                # n "{1 2 4}"
                # resonance (range 0.1 0.7 $ sine)
                # gain (range 0.7 0.9 $ sine)
        ] 

hush